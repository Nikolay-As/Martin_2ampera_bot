const express = require("express");
const app = express();
const port = 3001 || process.env.port;

var io = require("socket.io")(port);

let chel = 0;

const mysql = require("mysql2");

const pool = mysql.createPool({
  //host: 'nikolayhs.beget.tech',
  //user: 'nikolayhs_bot',
  //database: 'nikolayhs_bot',
  //password:'Nikolayhs_bot',
  host: "localhost", 
  user: "root",
  database: "nikolayhs_bot",
  password: "ahtiger2",
});

// Parse URL-encoded bodies (as sent by HTML forms)
app.use(express.urlencoded());

// Parse JSON bodies (as sent by API clients)
app.use(express.json());

io.on("connection", function (socket) {
  socket.on("check_views", function (result) {
    bot.telegram
      .sendMessage(id_kolya, "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " + result[0])
      .catch((e) => {
        console.log(e);
      });
    if (result[1]) {
      bot.telegram.sendPhoto(id_kolya, result[1]);
      bot.telegram.sendPhoto(id_vlad, result[1]);
      bot.telegram.sendPhoto(id_roma, result[1]);
      // bot.telegram.sendPhoto(id_andrey,result[1])
    }

    bot.telegram.sendMessage(id_vlad, "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " + result[0]);
    bot.telegram.sendMessage(id_roma, "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " + result[0]);
    //bot.telegram.sendMessage(id_andrey,'–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä '+result[0])
    //bot.telegram.sendPhoto(id_vlad,result[1])
  });

  socket.on("check_views_vlad", function (result) {
    bot.telegram.sendMessage(id_vlad, "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " + result[0]);
    bot.telegram.sendPhoto(id_vlad, result[1]);
  });

  socket.on("processed", function (result) {
    bot.telegram.sendMessage(
      result[1],
      "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " + result[0] + " –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞"
    );
  });

  socket.on("error", function (result) {
    bot.telegram.sendMessage(
      result[1],
      "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " +
        result[0] +
        " –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞(–æ—à–∏–±–∫–∞ –≤ –∑–∞—è–≤–∫–µ), –Ω–∞–ø–∏—à–∏ –∞–¥–º–∏–Ω—É"
    );
  });
});

app.post("/check_views", (req, res) => {
  bot.telegram.sendMessage(id_kolya, "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " + req.body.id);
  bot.telegram.sendPhoto(id_kolya, req.body.file_id);
});

app.post("/processed", (req, res) => {
  bot.telegram.sendMessage(
    req.body.id_user,
    "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " + req.body.id + " –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞"
  );
  console.log("nen z");
});
app.post("/error", (req, res) => {
  bot.telegram.sendMessage(
    req.body.id_user,
    "–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä " +
      req.body.id +
      " –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞(–æ—à–∏–±–∫–∞ –≤ –∑–∞—è–≤–∫–µ), –Ω–∞–ø–∏—à–∏ –∞–¥–º–∏–Ω—É"
  );
});

const {
  Telegraf,
  session,
  Scenes: { BaseScene, Stage },
  Markup,
} = require("telegraf");

const bot_token = "1922976147:AAFyOZ6r_BMdBSpfADzL9bTdJxBWupkNW4s"; // –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

const id_vlad = "846809274";
const id_kolya = "841304292";
const id_roma = "1065423969";
//const id_andrey='1737594249'

const remove_keyboard = Markup.removeKeyboard();
const menu_keyboard = Markup.keyboard([
  "üí∏–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É",
  "üíª–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ/–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ MAC-–∞–¥—Ä–µ—Å–æ–≤",
  "üëÄ–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏",
  "‚ö†–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ",
  "üìã–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",
  "üö®–ü–Ω—É—Ç—å –∞–¥–º–∏–Ω–∞,—á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞—è–≤–∫—Éü§¨",
]).oneTime(); // –æ–±—â–µ–µ –º–µ–Ω—é –±–æ—Ç–∞

const menu_instructions = Markup.keyboard([
  "üí≥–£–∑–Ω–∞—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã",
  "‚¨ÖÔ∏è–ù–∞–∑–∞–¥",
]).oneTime();

const menu_otmena = Markup.keyboard(["üö´–û—Ç–º–µ–Ω–∞"]).oneTime();

// –°—Ü–µ–Ω–∞, –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É -------- ( –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã)
const PaymentScene_1 = new BaseScene("PaymentScene_1");
PaymentScene_1.enter((ctx) =>
  ctx.reply("–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã", remove_keyboard)
);
PaymentScene_1.on("text", (ctx) => {
  ctx.session.number_room = ctx.message.text;
  return ctx.scene.enter("PaymentScene_2"); // –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ —Å—Ü–µ–Ω—É PaymentScene_2
});
// ------------------

// –°—Ü–µ–Ω–∞, –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É -------- ( –§–∞–º–∏–ª–∏–ª–∏—è –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∑–∞—Ä–µ–≥–∞–Ω –∏–Ω–µ—Ç )
const PaymentScene_2 = new BaseScene("PaymentScene_2");
PaymentScene_2.enter((ctx) =>
  ctx.reply("–ù–∞–ø–∏—à–∏ —Ñ–∞–º–∏–ª–∏—é –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª —Å–µ—Ç—å")
);
PaymentScene_2.on("text", (ctx) => {
  ctx.session.fio = ctx.message.text;
  return ctx.scene.enter("PaymentScene_3"); // –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ —Å—Ü–µ–Ω—É PaymentScene_3
});
// ------------------

// –°—Ü–µ–Ω–∞, –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É -------- ( –°–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã –∏–Ω–µ—Ç )
const PaymentScene_3 = new BaseScene("PaymentScene_3");
PaymentScene_3.enter((ctx) => ctx.reply("–û—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω –ø–ª–∞—Ç–µ–∂–∞"));
PaymentScene_3.on("photo", (ctx) => {
  console.log(ctx.message);
  ctx.session.foto = ctx.message.photo[0].file_id;
  ctx.reply(`–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞`, menu_keyboard);
  return ctx.scene.leave();
});
PaymentScene_3.leave((ctx) => {
  if (ctx.message.text != "/start") {
    const data = [
      ctx.from.id,
      "–û–ø–ª–∞—Ç–∞",
      ctx.session.number_room,
      ctx.session.fio,
      ctx.session.foto,
    ]; // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
    const sql =
      "INSERT INTO applications(id_user,type,  room_number,fio_user,file_id,date,time) VALUES(?,?,?,?,?,Now(),Now())";
    pool.query(sql, data, function (err, results) {
      if (err) console.log(err);
      else {
        console.log(results.insertId);
        ctx.reply(`–ù–æ–º–µ—Ä –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ : ${results.insertId}`);
        bot.telegram.sendMessage(
          id_kolya,
          `–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ(${results.insertId}) –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç (${ctx.session.fio}) –∫–æ–º–Ω–∞—Ç–∞ (${ctx.session.number_room})`
        );
        bot.telegram.sendMessage(
          id_vlad,
          `–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ(${results.insertId}) –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç (${ctx.session.fio}) –∫–æ–º–Ω–∞—Ç–∞ (${ctx.session.number_room})`
        );
        bot.telegram.sendMessage(
          id_roma,
          `–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ(${results.insertId}) –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç (${ctx.session.fio}) –∫–æ–º–Ω–∞—Ç–∞ (${ctx.session.number_room})`
        );
        //bot.telegram.sendMessage(id_andrey,`–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ(${results.insertId}) –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç (${ctx.session.fio}) –∫–æ–º–Ω–∞—Ç–∞ (${ctx.session.number_room})`)
      }
    });
  } else {
    ctx.reply(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É—É!`);
  }
});
// ------------------

// –°—Ü–µ–Ω–∞, –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/–∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ -------- ( –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã)
const Add_change_mac_1 = new BaseScene("Add_change_mac_1");
Add_change_mac_1.enter((ctx) =>
  ctx.reply("–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã", remove_keyboard)
);
Add_change_mac_1.on("text", (ctx) => {
  ctx.session.number_room = ctx.message.text;
  return ctx.scene.enter("Add_change_mac_2"); // –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ —Å—Ü–µ–Ω—É Add_change_mac_2
});
// ------------------

// –°—Ü–µ–Ω–∞, –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/–∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ -------- (–°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ñ–∞–º–∏–ª–∏—é –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å–µ—Ç—å)
const Add_change_mac_2 = new BaseScene("Add_change_mac_2");
Add_change_mac_2.enter((ctx) =>
  ctx.reply("–ù–∞–ø–∏—à–∏ —Ñ–∞–º–∏–ª–∏—é –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª —Å–µ—Ç—å.", remove_keyboard)
);
Add_change_mac_2.on("text", (ctx) => {
  ctx.session.fio = ctx.message.text;
  return ctx.scene.enter("Add_change_mac_3"); // –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ —Å—Ü–µ–Ω—É Add_change_mac_3
});
// ------------------

// –°—Ü–µ–Ω–∞, –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/–∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ -------- (–°–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤—Å–µ–≥–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–æ)
const Add_change_mac_3 = new BaseScene("Add_change_mac_3");
Add_change_mac_3.enter((ctx) =>
  ctx.reply(
    "–ù–∞–ø–∏—à–∏ Mac-–∞–¥—Ä–µ—Å–∞, –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤(—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª), –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω—ã.",
    remove_keyboard
  )
);
Add_change_mac_3.on("text", (ctx) => {
  if (ctx.message.text === "/start") {
    ctx.reply(`–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ú–ê–ö –∞–¥—Ä–µ—Å–∞`);
  } else {
    ctx.session.mac = ctx.message.text;
    ctx.reply(`–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞`, menu_keyboard);
    return ctx.scene.leave();
  }
});

Add_change_mac_3.leave((ctx) => {
  const data = [
    ctx.from.id,
    "MAC",
    ctx.session.number_room,
    ctx.session.fio,
    ctx.session.mac,
  ]; // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
  const sql =
    "INSERT INTO applications(id_user,type,  room_number,fio_user,comment,date,time) VALUES(?,?,?,?,?,Now(),Now())";
  pool.query(sql, data, function (err, results) {
    if (err) console.log(err);
    else {
      console.log(results.insertId);
      ctx.reply(`–ù–æ–º–µ—Ä –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ : ${results.insertId}`);
      bot.telegram.sendMessage(
        id_kolya,
        `–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ(${results.insertId}) –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ MAC-–æ–≤ –æ—Ç  (${ctx.session.fio}) –∫–æ–º–Ω–∞—Ç–∞ (${ctx.session.number_room})`
      );
      bot.telegram.sendMessage(
        id_vlad,
        `–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ(${results.insertId}) –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ MAC-–æ–≤ –æ—Ç (${ctx.session.fio}) –∫–æ–º–Ω–∞—Ç–∞ (${ctx.session.number_room})`
      );
      bot.telegram.sendMessage(
        id_roma,
        `–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ(${results.insertId}) –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ MAC-–æ–≤ –æ—Ç (${ctx.session.fio}) –∫–æ–º–Ω–∞—Ç–∞ (${ctx.session.number_room})`
      );
      //bot.telegram.sendMessage(id_andrey,`–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ(${results.insertId}) –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ MAC-–æ–≤ –æ—Ç (${ctx.session.fio}) –∫–æ–º–Ω–∞—Ç–∞ (${ctx.session.number_room})`)
    }
  });
});
// ------------------

// –°—Ü–µ–Ω–∞, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ -------- ( –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ )
const Check_status_1 = new BaseScene("Check_status_1");
Check_status_1.enter((ctx) =>
  ctx.reply("–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏", remove_keyboard)
);
Check_status_1.on("text", (ctx) => {
  ctx.session.number_app = Number(ctx.message.text);
  ctx.reply(`–ü—Ä–æ–≤–µ—Ä—è—é...`, menu_keyboard);
  return ctx.scene.leave();
});
Check_status_1.leave((ctx) => {
  const data = [ctx.session.number_app, ctx.from.id];
  const sql = "SELECT type,status FROM applications WHERE id=? AND id_user=?";
  pool.query(sql, data, function (err, results) {
    if (err) {
      console.log(err);
      ctx.reply("–¢—ã –∑–∞–±—ã–ª —á—Ç–æ —Ç–∞–∫–æ–µ —Ü–∏—Ñ—Ä—ã ? ERROR!", menu_keyboard);
    } else {
      if (results.length == 0) {
        ctx.reply(
          "–¢–∞–∫–æ–π –∑–∞—è–≤–∫–∏ –Ω–µ—Ç,–ª–∏–±–æ –Ω–µ –≤—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏ –µ–µ ( —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–µ —Å—Ç–∞—Ç—É—Å )",
          menu_keyboard
        );
      } else {
        ctx.reply(
          `–¢–∏–ø –∑–∞—è–≤–∫–∏: ${results[0].type}\n–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏: ${results[0].status}`,
          menu_keyboard
        );
      }
    }
  });
});
// ------------------

// –°—Ü–µ–Ω–∞, –ü–Ω—É—Ç—å –∞–¥–º–∏–Ω–∞ -------- ( –ü–∏–Ω–∞–µ–º )
const Kick_1 = new BaseScene("Kick_1");
Kick_1.enter((ctx) => {
  ctx.reply(`ü¶ø–ü–Ω—É–ª —Ç–µ–±—è!ü§¨`, menu_keyboard);
  console.log(ctx.from.id);
  return ctx.scene.leave();
});
Kick_1.leave((ctx) => {
  bot.telegram.sendMessage(
    id_kolya,
    `–ü–∏–Ω–∞–µ—Ç —Ç–µ–±—è,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`
  );
  bot.telegram.sendMessage(
    id_vlad,
    `–ü–∏–Ω–∞–µ—Ç —Ç–µ–±—è,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`
  );
  bot.telegram.sendMessage(
    id_roma,
    `–ü–∏–Ω–∞–µ—Ç —Ç–µ–±—è,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`
  );
  //bot.telegram.sendMessage(id_andrey,`–ü–∏–Ω–∞–µ—Ç —Ç–µ–±—è,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
});
// ------------------

// –°—Ü–µ–Ω–∞, –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è -------- (  )
const Instructions_1 = new BaseScene("Instructions_1");
Instructions_1.enter((ctx) => {
  ctx.reply(`–°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π`, menu_instructions);
  return ctx.scene.leave();
});
Instructions_1.leave((ctx) => {
  //bot.telegram.sendMessage(id_kolya,`–û–±—Ä–∞–±–æ—Ç–∞–π –∑–∞—è–≤–∫—É,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
  //bot.telegram.sendMessage(id_vlad,`–û–±—Ä–∞–±–æ—Ç–∞–π –∑–∞—è–≤–∫—É,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
});
// ------------------

// –°—Ü–µ–Ω–∞, —Å—Ç–∞—Ä—Ç–∞
const Start_1 = new BaseScene("Start_1");
Start_1.enter((ctx) => {
  ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞—Ä—Ç–∏–Ω.\n–Ø –±–æ—Ç —Å–µ—Ç–∏ II AMPERA\n–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é –æ —Ç–µ–±–µ –∏ –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∞–¥–º–∏–Ω–∞–º–∏.",
    menu_keyboard
  );
  //console.log(ctx.from.id);
  ctx.telegram.sendPhoto(
    ctx.from.id,
    "AgACAgIAAxkBAAIDqWFDWvI_gj7mdkv8N7ewCIex_jLgAAIZtjEbSKYZSj26dNRDnU9WAQADAgADeAADIAQ"
  );

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –≤ –±–∞–∑–µ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–∞—Ç–µ–ª—å ----------
  let check = "false";
  const sql1 = "SELECT chat_id from users";
  let mes;
  pool.query(sql1, function (err, rows) {
    for (i = 0; i < rows.length; i++) {
      if (rows[i].chat_id == ctx.from.id) {
        check = "true;";
        //buf_id=rows[i].id;
        //console.log('This &{} already exists in BD')
        break;
      }
    }

    //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É -------------
    if (check === "false") {
      const users = [
        ctx.from.id,
        ctx.from.first_name,
        ctx.from.last_name,
        ctx.from.username,
        1,
      ];
      const sql2 =
        "INSERT INTO users(chat_id,first_name,last_name,username,status) VALUES(?,?, ?,?,?)";
      pool.query(sql2, users, function (err, results) {
        if (err) console.log(err);
        else {
          chel = chel + 1;
          console.log(`${chel} –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.username}`);

          //mes="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ë–æ—Ç\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /off —á—Ç–æ–±—ã –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.";
          // bott.sendMessage(chatId,"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ë–æ—Ç\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /off —á—Ç–æ–±—ã –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.")
        }
      });
    }
    // -----------------------------------

    // –°–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –µ—Å—Ç—å, –Ω–æ –∫–æ–≥–¥–∞ —Ç–æ –æ—Ç–ø–∏—Å–∞–ª—Å—è
    else {
      const data = [1, ctx.from.id];
      pool.query("UPDATE users SET status=? where chat_id=?", data, () => {});

      //console.log("Status updated at start");
      //mes="–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞\n\n–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –µ–µ  —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /off.";
      //bott.sendMessage(chatId,"–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞\n\n–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –µ–µ  —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /off.")
    }
    // ----------------------
  });
  // ------------------------------------

  return ctx.scene.leave();
});
// ------------------

// –°—Ü–µ–Ω–∞, –ø—Ä–æ–±–ª–µ–º—ã -------- (  )
const Problem_1 = new BaseScene("Problem_1");
Problem_1.enter((ctx) => {
  ctx.reply(`–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..`, menu_keyboard);
  return ctx.scene.leave();
});
Problem_1.leave((ctx) => {
  //bot.telegram.sendMessage(id_kolya,`–û–±—Ä–∞–±–æ—Ç–∞–π –∑–∞—è–≤–∫—É,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
  //bot.telegram.sendMessage(id_vlad,`–û–±—Ä–∞–±–æ—Ç–∞–π –∑–∞—è–≤–∫—É,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
});
// ------------------

// –°—Ü–µ–Ω–∞, –∞–¥–º–∏–Ω—ã -------- (  )
const Admin_1 = new BaseScene("Admin_1");
Admin_1.enter((ctx) => {
  if (
    (ctx.from.id != id_kolya) &
    (ctx.from.id != id_vlad) &
    (ctx.from.id != id_roma)
  ) {
    ctx.reply("–¢—ã –Ω–µ –º–æ–π —Ö–æ–∑—è–∏–Ω!");
    return ctx.scene.leave();
  } else {
    ctx.reply("–¢–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:");
    Admin_1.on("text", (ctx) => {
      const sql2 = "SELECT * FROM users";
      pool.query(sql2, function (err, results) {
        if (err) {
          console.log(err);
        } else {
          for (i = 0; i < results.length; i++) {
            if (
              ctx.from.id == id_kolya ||
              ctx.from.id == id_vlad ||
              ctx.from.id == id_roma
            ) {
              bot.telegram
                .sendMessage(results[i].chat_id, ctx.message.text)
                .catch((e) => {
                  console.log(e);
                });
              console.log(results[i].id);
            } else {
              console.log("—Ç—É—Ç —á—É–∂–∞–∫");
            }
          }
          ctx.reply("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!", menu_keyboard);
          return ctx.scene.leave();
        }
      });
    });
  }
});
Admin_1.leave((ctx) => {
  //bot.telegram.sendMessage(id_kolya,`–û–±—Ä–∞–±–æ—Ç–∞–π –∑–∞—è–≤–∫—É,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
  //bot.telegram.sendMessage(id_vlad,`–û–±—Ä–∞–±–æ—Ç–∞–π –∑–∞—è–≤–∫—É,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
});
// ------------------

// –°—Ü–µ–Ω–∞, –ø—Ä–æ—Å–º–æ—Ç—Ä–∞  –∑–∞—è–≤–æ–∫ (  )
const Check_1 = new BaseScene("Check_1");
Check_1.enter((ctx) => {
  if (
    ctx.from.id == id_kolya ||
    ctx.from.id == id_vlad ||
    ctx.from.id == id_roma
  ) {
    ctx.reply("–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏");
    Check_1.on("text", (ctx) => {
      ctx.session.number_app = Number(ctx.message.text);
      return ctx.scene.enter("Check_2"); // –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ —Å—Ü–µ–Ω—É Check_2
    });
  } else {
    ctx.leave("–¢—ã –Ω–µ –º–æ–π —Ö–æ–∑—è–∏–Ω!");
    return ctx.leave();
  }
});
// ------------------

/*
// –°—Ü–µ–Ω–∞, –ø—Ä–æ—Å–º–æ—Ç—Ä–∞  –∑–∞—è–≤–æ–∫ (  )
const Check_2=new BaseScene('Check_2')
Check_2.enter(ctx=>{
    if (ctx.from.id==id_kolya || ctx.from.id==id_vlad ){
    ctx.reply('–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏');
    Check_2.on('text',ctx=>{
        ctx.session.number_app=Number(ctx.message.text)
        return ctx.scene.enter('Check_2') // –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ —Å—Ü–µ–Ω—É Check_3
    })
}
    
    else {
        ctx.leave('–¢—ã –Ω–µ –º–æ–π —Ö–æ–∑—è–∏–Ω!')
        return ctx.leave()
    }
})
// ------------------
*/
//Check_2.leave(ctx=>{
//bot.telegram.sendMessage(id_kolya,`–û–±—Ä–∞–±–æ—Ç–∞–π –∑–∞—è–≤–∫—É,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
//bot.telegram.sendMessage(id_vlad,`–û–±—Ä–∞–±–æ—Ç–∞–π –∑–∞—è–≤–∫—É,\n(@${ctx.from.username})\n(${ctx.from.first_name})\n(${ctx.from.last_name})\n(${ctx.from.id})\n –ø–∏–Ω–∞–µ—Ç —Ç–µ–±—è`)
//})
// ------------------

const stage = new Stage([
  PaymentScene_1,
  PaymentScene_2,
  PaymentScene_3,
  Add_change_mac_1,
  Add_change_mac_2,
  Add_change_mac_3,
  Check_status_1,
  Kick_1,
  Instructions_1,
  Start_1,
  Problem_1,
  Admin_1,
  Check_1,
]);
const bot = new Telegraf("1922976147:AAFyOZ6r_BMdBSpfADzL9bTdJxBWupkNW4s"); // –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–æ—Ç—É
bot.use(session());
bot.use(stage.middleware());
bot.command("/start", (ctx) => ctx.scene.enter("Start_1"));
bot.command("/push", (ctx) => ctx.scene.enter("Admin_1"));
//bot.command('/name',ctx=>ctx.scene.enter('PaymentScene'))

bot.hears("üí∏–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É", (ctx) =>
  ctx.scene.enter("PaymentScene_1")
);
bot.hears("üíª–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ/–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ MAC-–∞–¥—Ä–µ—Å–æ–≤", (ctx) =>
  ctx.scene.enter("Add_change_mac_1")
);
bot.hears("üëÄ–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏", (ctx) =>
  ctx.scene.enter("Check_status_1")
);
//bot.hears('üö®–ü–Ω—É—Ç—å –ø—Ä–æ–∞–π–¥–µ—Ä–∞,—á—Ç–æ–±—ã –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–ª', ctx=>ctx.scene.enter('Kick_1'))
bot.hears("üö®–ü–Ω—É—Ç—å –∞–¥–º–∏–Ω–∞,—á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞—è–≤–∫—Éü§¨", (ctx) =>
  ctx.scene.enter("Kick_1")
);

bot.hears("üìã–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", (ctx) => ctx.scene.enter("Instructions_1"));
bot.hears("‚ö†–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ", (ctx) => ctx.scene.enter("Problem_1"));

bot.hears(
  "üí≥–£–∑–Ω–∞—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã",
  (ctx) => ctx.reply("2202 2026 2349 5888 –ù–∏–∫–æ–ª–∞–π –ü"),
  menu_instructions
);
bot.hears("‚¨ÖÔ∏è–ù–∞–∑–∞–¥", (ctx) => ctx.reply(`–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é`, menu_keyboard));

bot.command("/check", (ctx) => ctx.scene.enter("Check_1"));

bot.catch((err) => {
  console.log(err);
});

bot.launch();
